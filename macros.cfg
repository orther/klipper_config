#[include GET_PROBE_LIMITS.cfg]
#[include print_area_bed_mesh.cfg]

[gcode_macro G29]
gcode:
  G28
  BED_MESH_CALIBRATE
  G0 X0 Y0 Z10 F6000
  BED_MESH_PROFILE save=default
  SAVE_CONFIG

;;
;; https://ellis3dp.com/Print-Tuning-Guide/articles/passing_slicer_variables.html
;;
[gcode_macro PRINT_START]
gcode:        
    # Parameters
    {% set bedtemp = params.BED|int %}
    {% set hotendtemp = params.HOTEND|int %}
    {% set chambertemp = params.CHAMBER|default(0)|int %}
    
    _CG28

    # Print Aread Bed Mesh
    BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}  FORCE_NEW_MESH=True

    # Heat up hotend and bed at the same time (Brandon hack attempt faster starts)
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET={hotendtemp}
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET={bedtemp}

    # Heat up hotend and bed
    M190 S{bedtemp}                                                              ; set & wait for bed temp
    M109 S{hotendtemp}                                                           ; set & wait for hotend temp


    G28 Z                                                                        ; final z homing
    G90                                                                          ; absolute positioning

    # Prime line
    M117 PRIME LINE
    PRIME_LINE

    # Print message on LCD
    M117 Start printing...

;;
;; https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/conditional_homing.html
;;
[gcode_macro _CG28]
gcode:
    {% if "xyz" not in printer.toolhead.homed_axes %}
        G28
    {% endif %}


;;
;; https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/replace_m109_m190_with_temp_wait.html
;;
[gcode_macro M109]
rename_existing: M99109
gcode:
    #Parameters
    {% set s = params.S|float %}
    
    M104 {% for p in params %}{'%s%s' % (p, params[p])}{% endfor %}  ; Set hotend temp
    {% if s != 0 %}
        TEMPERATURE_WAIT SENSOR=extruder MINIMUM={s} MAXIMUM={s+1}   ; Wait for hotend temp (within 1 degree)
    {% endif %}


;;
;;  https://ellis3dp.com/Print-Tuning-Guide/articles/useful_macros/test_speed.html
;;
# Home, get position, throw around toolhead, home again.
# If MCU stepper positions (first line in GET_POSITION) are greater than a full step different (your number of microsteps), then skipping occured.
# We only measure to a full step to accomodate for endstop variance.
# Example: TEST_SPEED SPEED=300 ACCEL=5000 ITERATIONS=10

[gcode_macro TEST_SPEED]
gcode:
    # Speed
    {% set speed  = params.SPEED|default(printer.configfile.settings.printer.max_velocity)|int %}
    # Iterations
    {% set iterations = params.ITERATIONS|default(5)|int %}
    # Acceleration
    {% set accel  = params.ACCEL|default(printer.configfile.settings.printer.max_accel)|int %}
    # Bounding inset for large pattern (helps prevent slamming the toolhead into the sides after small skips, and helps to account for machines with imperfectly set dimensions)
    {% set bound = params.BOUND|default(20)|int %}
    # Size for small pattern box
    {% set smallpatternsize = SMALLPATTERNSIZE|default(20)|int %}
    
    # Large pattern
        # Max positions, inset by BOUND
        {% set x_min = printer.toolhead.axis_minimum.x + bound %}
        {% set x_max = printer.toolhead.axis_maximum.x - bound %}
        {% set y_min = printer.toolhead.axis_minimum.y + bound %}
        {% set y_max = printer.toolhead.axis_maximum.y - bound %}
    
    # Small pattern at center
        # Find X/Y center point
        {% set x_center = (printer.toolhead.axis_minimum.x|float + printer.toolhead.axis_maximum.x|float ) / 2 %}
        {% set y_center = (printer.toolhead.axis_minimum.y|float + printer.toolhead.axis_maximum.y|float ) / 2 %}
        
        # Set small pattern box around center point
        {% set x_center_min = x_center - (smallpatternsize/2) %}
        {% set x_center_max = x_center + (smallpatternsize/2) %}
        {% set y_center_min = y_center - (smallpatternsize/2) %}
        {% set y_center_max = y_center + (smallpatternsize/2) %}

    # Save current gcode state (absolute/relative, etc)
    SAVE_GCODE_STATE NAME=TEST_SPEED
    
    # Output parameters to g-code terminal
    { action_respond_info("TEST_SPEED: starting %d iterations at speed %d, accel %d" % (iterations, speed, accel)) }
    
    # Home and get position for comparison later:
        G28
        # QGL if not already QGLd (only if QGL section exists in config)
        {% if printer.configfile.settings.quad_gantry_level %}
            {% if printer.quad_gantry_level.applied == False %}
                QUAD_GANTRY_LEVEL
                G28 Z
            {% endif %}
        {% endif %} 
        # Move 50mm away from max position and home again (to help with hall effect endstop accuracy - https://github.com/AndrewEllis93/Print-Tuning-Guide/issues/24)
        G90
        G1 X{printer.toolhead.axis_maximum.x-50} Y{printer.toolhead.axis_maximum.y-50} F{30*60}
        G28 X Y
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Go to starting position
    G0 X{x_min} Y{y_min} Z{bound + 10} F{speed*60}

    # Set new limits
    SET_VELOCITY_LIMIT VELOCITY={speed} ACCEL={accel} ACCEL_TO_DECEL={accel / 2}

    {% for i in range(iterations) %}
        # Large pattern
            # Diagonals
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
            
            # Box
            G0 X{x_min} Y{y_min} F{speed*60}
            G0 X{x_min} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_max} F{speed*60}
            G0 X{x_max} Y{y_min} F{speed*60}
        
        # Small pattern
            # Small diagonals 
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
            
            # Small box
            G0 X{x_center_min} Y{y_center_min} F{speed*60}
            G0 X{x_center_min} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_max} F{speed*60}
            G0 X{x_center_max} Y{y_center_min} F{speed*60}
    {% endfor %}

    # Restore max speed/accel/accel_to_decel to their configured values
    SET_VELOCITY_LIMIT VELOCITY={printer.configfile.settings.printer.max_velocity} ACCEL={printer.configfile.settings.printer.max_accel} ACCEL_TO_DECEL={printer.configfile.settings.printer.max_accel_to_decel} 

    # Re-home and get position again for comparison:
        G28
        # Go to XY home positions (in case your homing override leaves it elsewhere)
        G90
        G0 X{printer.toolhead.axis_maximum.x-1} Y{printer.toolhead.axis_maximum.y-1} F{30*60}
        G4 P1000 
        GET_POSITION

    # Restore previous gcode state (absolute/relative, etc)
    RESTORE_GCODE_STATE NAME=TEST_SPEED


###########################################################
##                       Marcos
###########################################################
 
# https://albertogrespan.com/blog/3d-printing/klipper-on-an-ender-3/
# https://github.com/Klipper3d/klipper/blob/master/docs/G-Codes.md
# https://www.reddit.com/r/klippers/comments/kj2h5r/stepbystep_guide_for_ender_3_v2_klipper_w_bltouch/
 
# --------------------------- Start Print ----------------------------

[gcode_macro START_PRINT]
#variable_bed_temp: 50
#variable_extruder_temp: 205
gcode:
    # Home
    {% if printer.homed_axes != 'XYZ' %}
      G28		
    {% endif %}

    # Print Aread Bed Mesh
    BED_MESH_CALIBRATE PRINT_MIN={params.PRINT_MIN} PRINT_MAX={params.PRINT_MAX}  FORCE_NEW_MESH=True

    # Prime line
    M117 PRIME LINE
    PRIME_LINE
    
    # Print message on LCD
    M117 Start printing...

# --------------------------------------------------------------------

# --------------------------- Start Print PLA ----------------------------

[gcode_macro START_PRINT_PLA]
# variable_bed_temp: 50
# variable_extruder_temp: 210
gcode:
    {% set T_BED = params.T_BED|default(50)|float %}
    {% set T_EXTRUDER = params.T_EXTRUDER|default(210) %}
    
    # Print message on LCD
    M117 Start Homing
    
    # Use absolute coordinates
    G92
    
    # Start heating and continue
    M117 Waiting for temperature
    M140 S{T_BED}
    M109 S{T_EXTRUDER}
    M190 S{T_BED} # wait till bed temp is reached, then continue

    # Use absolute coordinates
    G90

    # Reset the G-Code Z offset (adjust Z offset if needed)
    #z_offset: 3.270
    #SET_GCODE_OFFSET Z=3.270
    START_PRINT

# --------------------------------------------------------------------

# --------------------------- Start Print PETG ----------------------------

[gcode_macro START_PRINT_PETG]
# variable_parameter_T_BED: 60
# variable_parameter_T_EXTRUDER: 225
gcode:
    {% set T_BED = params.T_BED|default(60)|float %}
    {% set T_EXTRUDER = params.T_EXTRUDER|default(225)|float %}
    
    # Use absolute coordinates
    G92
    
    # Start bed heating and continue
    M117 Waiting for temperature
    M140 S{T_BED}
    M109 S{T_EXTRUDER}
    M190 S{T_BED} # wait till bed temp is reached, then continue

    # Use absolute coordinates
    G90
    
    # Reset the G-Code Z offset (adjust Z offset if needed)
    #z_offset: 3.270
    #SET_GCODE_OFFSET Z=3.270
    START_PRINT
 
# --------------------------------------------------------------------

# ---------------------------- End Print -----------------------------

[gcode_macro END_PRINT]
variable_machine_depth: 235
gcode:
    # Relative positionning
    G91
    # Unload little filament
    G1 E-5 Z+10 F3000
    G1 E-10 F1500
    # Print message on LCD
    M117 Done printing :)
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    M107 ; turn off fan
    # Absolute positionning
    G90
    # absolute xy
    G1 X10 Y200 F2000
    M84
    #BED_MESH_CLEAR

# --------------------------------------------------------------------

# ---------------------------- Prime Line -----------------------------

# prime the nozzle 
[gcode_macro PRIME_LINE]
gcode: 
    # Reset Extruder    
    G92 E0
    G1 Z10 F240
    # Move the nozzle very close to the bed
    G1 X2 Y10 F3000
    G1 Z0.28 F240
    # Wait for bed to reach temperature
    #M190 S{bed_temp}
    # Set and wait for nozzle to reach temperature
    #M109 S{extruder_temp}
    G1 E10 F100 # load little filament
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F5000
    # Move to start position
    G1 X2.1 Y20 Z0.28 F300
    # Draw the first line
    G1 X2.1 Y150 Z0.28 F1500 E15
    # Move to side a little
    G1 X2.4 Y150 Z0.28 F1500.0
    # Draw the second line
    G1 X2.4 Y20 Z0.28 F1500.0 E30
    # Reset Extruder
    G92 E0
    # Move Z Axis up
    G1 Z2.0 F300
    M117 Start Printing...
 
# ---------------------------- Countdown -----------------------------

#[gcode_macro COUNTDOWN]
#default_parameter_MSG: "Time: "      
#default_parameter_TIME: 10      
#gcode:        
  # countdown 
#  {% for s in range(TIME|int, 0, -1) %}
#  # dwell 1 second
#  G4 P1000
#  # echo
#  M117 {params.MSG} {s}s
#  M118 {params.MSG} {s}s     
#  {% endfor %}

# --------------------------------------------------------------------

# ---------------------------- Load Filament -------------------------

[gcode_macro LOAD_FILAMENT]
# M701
gcode:
  SAVE_GCODE_STATE NAME=loading_filament
  M117 Loading Filament
  M83
  G92 E0.0
  LOW_TEMP_CHECK
  G1 E320 F300  # length of bowden tube till cold-end (~420mm) 
  G1 E20 F100  # some extra to prime the nozzle --> slower 
  G92 E0.0
  RESTORE_GCODE_STATE NAME=loading_filament

# --------------------------------------------------------------------

# ---------------------------- Unload Filament -----------------------

[gcode_macro UNLOAD_FILAMENT]
# M702
gcode:
  SAVE_GCODE_STATE NAME=unloading_filament
  M125 # park
  M117 Unloading Filament 
  LOW_TEMP_CHECK
  G91 # set relative
  G1 E10 F100 
  G92 E0.0
  G1 E-20 F1000
  G1 E-300 F400 # the E is the length of the bowden tube (420mm) + 100 mm. 
  G92 E0.0
  RESTORE_GCODE_STATE NAME=unloading_filament

# --------------------------------------------------------------------

# ---------------------------- Pause ---------------------------------


[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  PAUSE_BASE
  G91
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G1 E-{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}
  {% if "xyz" in printer.toolhead.homed_axes %}
    G1 Z{z_safe} F900
    G90
    G1 X{x_park} Y{y_park} F6000
  {% else %}
    {action_respond_info("Printer not homed")}
  {% endif %}

# --------------------------------------------------------------------

# ---------------------------- Resume --------------------------------

[gcode_macro RESUME]
rename_existing: RESUME_BASE
description: Resume the actual running print
              
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  #### get VELOCITY parameter if specified ####
  {% if 'VELOCITY' in params|upper %}
    {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
  {%else %}
    {% set get_params = "" %}
  {% endif %}
  ##### end of definitions #####
  {% if printer.extruder.can_extrude|lower == 'true' %}
    G91
    G1 E{E} F2100
  {% else %}
    {action_respond_info("Extruder not hot enough")}
  {% endif %}  
  RESUME_BASE {get_params}

# --------------------------------------------------------------------

# ---------------------------- Cancel Print --------------------------

[gcode_macro CANCEL_PRINT]
description: Cancel the actual running print
rename_existing: CANCEL_PRINT_BASE
gcode:
  #TURN_OFF_HEATERS
  G91 # Set all axes to relative
  # G90 # Absolute positionning
  CANCEL_PRINT_BASE
  G1 Z10 # Raise Z more
  G1 X10 Y200 F2000 # Absolute xy
  # G1 X0 Y{machine_depth}
  M84 X Y E ; disable motors

# --------------------------------------------------------------------

# ------------------------- Filament Change --------------------------
# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.


#[gcode_macro FILAMENT_CHANGE1]
# M600
#default_parameter_X: 50
#default_parameter_Y: 0
#default_parameter_Z: 10
#gcode:
#    SAVE_GCODE_STATE NAME=M600_state
#    PAUSE
#    G91
#    G1 E-.8 F2700
#    G1 Z{Z}
#    G90
#    G1 X{X} Y{Y} F3000
#    G91
#    G1 E-50 F1000
#    RESTORE_GCODE_STATE NAME=M600_state
    

# filament change 
[gcode_macro FILAMENT_CHANGE]
# M600
gcode:
  M117 Filament Change
  M118 Filament Change
  SAVE_GCODE_STATE NAME=filament_change
  PAUSE
  LOW_TEMP_CHECK
  G91 # relative
  G1 E-1 F300 # retract 1
  M125 # park
  M702 # unload
  M117 New filament
  M118 New filament
  COUNTDOWN TIME=25 MSG="Switch"
  M701
  COUNTDOWN TIME=10 MSG="Clean"
  RESUME
  M117 Resuming
  M118 Resuming
  RESTORE_GCODE_STATE NAME=filament_change
  M117 Printing..
  M118 Printing..

# --------------------------------------------------------------------

# ------------------------- Motors Off -------------------------------

[gcode_macro MOTORS_OFF] 
gcode:
  M84 X Y E ; disable motors

# --------------------------------------------------------------------

# ------------------------- Bed Mesh Calibrate -----------------------

#[gcode_macro CALIBRATE]
#gcode:
#  G28
#  M118 Start clibrating...
#  BED_MESH_CALIBRATE
#  G0 X0 Y0 Z10 F6000
#  BED_MESH_PROFILE save=default
#  SAVE_CONFIG

[gcode_macro CALIBRATE]
gcode:
  G28
  {% set t = params.T|default(0)|float %}

  {% if printer.idle_timeout.state == "Printing" %}
    {action_respond_info("This command cannot be used while printing")}
  {% elif printer.toolhead.homed_axes != "xyz" %}
    {action_respond_info("Please home XYZ first")}
  {% else %}
    SAVE_GCODE_STATE NAME=G29_state
    # G90
    # G1 Z10 F240
    {% if t > 30.0 %}
      M190 S{t}
    {% endif %}
    BED_MESH_CALIBRATE
    {% if 'S' in params %}
      M140 S{params.S}
    {% endif %}
    G28
    BED_MESH_CALIBRATE
    #G90
    #G1 Z10 F240
    G1 X150 Y155 F6000
    BED_MESH_PROFILE save=default
    RESTORE_GCODE_STATE NAME=G29_state MOVE=0
  {% endif %}

#--------------------------------------------------------------------

# ------------------------- Low Temp Check --------------------------
# LOW_TEMP_CHECK checks if there is a setpoint for the  extruder. Untested! 
# - If this setpoint is reached, continue. 
# - If not, heat to setpoint.
# - If no setpoint, heat to parameter T (default@200)
[gcode_macro LOW_TEMP_CHECK]
gcode:
    {% set T_EXTRUDER = params.T_EXTRUDER|default(205) %}
    {% if printer.extruder.target != 0 %} # if there is a setpoint for extruder
        {% if printer.extruder.temperature < printer.extruder.target %} # if not reached, heat
            M118 Heating from {printer.extruder.temperature} to {printer.extruder.target}.
            M109 S{printer.extruder.target|float} 
        {% endif %}
    {% else %} # if no setpoint for extruder
        {% if printer.extruder.target < T_EXTRUDER %}  # heat to T.
            M118 No setpoint, heating to {T_EXTRUDER}.
            M109 S{T_EXTRUDER}
        {% endif %}
    {% endif %}
